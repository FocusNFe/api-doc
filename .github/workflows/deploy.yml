name: Deploy to Focus API Docs Site

on:
  release:
    types: [published]

jobs:
  deploy:
    permissions:
      contents: write

    runs-on: ubuntu-latest
    env:
      ruby-version: 2.6

    steps:
    - uses: actions/checkout@v2
    - name: Set up Ruby
      uses: ruby/setup-ruby@v1
      with:
        ruby-version: ${{ env.ruby-version }}

    - uses: actions/cache@v2
      with:
        path: vendor/bundle
        key: gems-${{ runner.os }}-${{ env.ruby-version }}-${{ hashFiles('**/Gemfile.lock') }}
        restore-keys: |
          gems-${{ runner.os }}-${{ env.ruby-version }}-
          gems-${{ runner.os }}-

    - run: bundle config set deployment 'true'
    - name: bundle install
      run: |
        bundle config path vendor/bundle
        bundle install --jobs 4 --retry 3

    - name: Build
      run: bundle exec middleman build --clean

    - name: Deploy via SCP
      run: |
          mkdir -p ~/.ssh
          echo -e "${{ secrets.KEY }}" > ~/.ssh/id_ed25519
          chmod og-rwx ~/.ssh/id_ed25519
          scp -s -r -o StrictHostKeyChecking=no ./build/* ${{ secrets.USERNAME }}@${{ secrets.HOST }}:upload/

    - name: Google Chat Notification
      run: |
          curl --location --request POST '${{ secrets.RELEASE_WEBHOOK }}&threadKey=${{ github.event.repository.name }}-release' \
          --header 'Content-Type: application/json' \
          --data-raw '{
            "cards": [
              {
                "header": {
                  "title": "<b>Publicado ${{ github.event.repository.name }} ${{ github.event.release.name }}</b>",
                  "subtitle": "${{ github.event.release.published_at }} Â· ${{ github.event.release.author.login }}"
                },
                "sections": [
                  {
                    "widgets": [
                      {
                        "buttons": [
                          {
                            "textButton": {
                              "text": "VER NOTAS",
                              "onClick": {
                                "openLink": {
                                  "url": "${{ github.event.release.html_url }}"
                                }
                              }
                            }
                          }
                        ]
                      }
                    ]
                  }
                ]
              }
            ]
          }' || echo "notification failure, but published ok"
